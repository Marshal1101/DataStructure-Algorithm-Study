"""Solution code for "BOJ 1275. 커피숍2".

- Problem link: https://www.acmicpc.net/problem/1275
- Solution link: http://www.teferi.net/ps/problems/boj/1275

Tags: [Fenwick tree]

(This code was generated by Import Inliner v0.4)
"""

import sys
from collections.abc import Iterable


# >>>[BEGIN] teflib.fenwicktree.FenwickTree [v1.4] (Copied from teflib/fenwicktree.py)<<<  yapf:disable
class FenwickTree:
    """Fenwick tree for sum operation."""

    __slots__ = ('_size', '_arr', '_tree')

    def __init__(self, nums_or_size: Iterable[float] | int):
        if isinstance(nums_or_size, int):
            self._size = nums_or_size
            self._arr = [0] * nums_or_size
            self._tree = [0] * nums_or_size
        else:
            self._arr = list(nums_or_size)
            self._size = len(self._arr)
            self._tree = self._arr[:]
            for i, num in enumerate(self._tree):
                if i | (i + 1) < self._size:
                    self._tree[i | (i + 1)] += num

    def update(self, pos: int, num: float):
        self._arr[pos] += num
        while pos < self._size:
            self._tree[pos] += num
            pos |= pos + 1

    def set(self, pos: int, num: float):
        self.update(pos, num - self._arr[pos])

    def get(self, pos: int) -> float:
        return self._arr[pos]

    def query(self, beg: int, end: int) -> float:
        res = 0
        l, r = beg - 1, end - 1
        while r >= 0:
            res += self._tree[r]
            r = (r & (r + 1)) - 1
        while l >= 0:
            res -= self._tree[l]
            l = (l & (l + 1)) - 1
        return res
# >>>[END] teflib.fenwicktree.FenwickTree [v1.4]<<<  yapf:enable


def main():
    # pylint: disable=unused-variable
    N, Q = [int(x) for x in sys.stdin.readline().split()]
    nums = [int(x) for x in sys.stdin.readline().split()]
    fenwick = FenwickTree(nums)
    for _ in range(Q):
        x, y, a, b = [int(x) for x in sys.stdin.readline().split()]
        print(fenwick.query(x - 1, y) if x < y else fenwick.query(y - 1, x))
        fenwick.set(a - 1, b)


if __name__ == '__main__':
    main()